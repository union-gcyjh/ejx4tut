<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<display-name>ejx4tut</display-name>
	<session-config>
		<session-timeout>10</session-timeout>
	</session-config>

	<!-- 用户登录SESSION相关 -->
	<!-- 必须在前面 -->
	<!-- =======================================================================  -->
	
	<!-- 验证码 -->	
	<servlet>
	    <servlet-name>imageRandServlet</servlet-name>
	    <servlet-class>com.tienon.web.servlet.ImageRandServlet</servlet-class>
  	</servlet>
	<servlet-mapping>
	   <servlet-name>imageRandServlet</servlet-name>
	   <url-pattern>/servlet/imageRandServlet</url-pattern>
	</servlet-mapping>
	
	<!-- 退出系统 -->	
	<servlet>
	    <servlet-name>sessionServlet</servlet-name>
	    <servlet-class>com.tienon.web.servlet.SessionServlet</servlet-class>
  	</servlet>
	<servlet-mapping>
	   <servlet-name>sessionServlet</servlet-name>
	   <url-pattern>/servlet/sessionServlet</url-pattern>
	</servlet-mapping>
	
  	<!-- session filter 过滤器 -->	
	<filter>
		<filter-name>SessionFilter</filter-name>
		<filter-class>com.tienon.web.filter.SessionFilter</filter-class>
		<init-param>
			<description>
				要检查的 session 名称
			</description>
			<param-name>sessionKey</param-name>
			<param-value>loginInfo</param-value>
		</init-param>
		<init-param>
			<description>
			   sessionKey 的属性不存在或为空，则将请求重定向到该 URL，该参数值不包含web应用的 ContextPath。
			         如果不配置此参数，则在用户未登录系统的情况下，直接重定向到web应用的根路径（/）
     		</description>
			<param-name>forwardUrl</param-name>
			<param-value>/login.html</param-value>
		</init-param>
		<init-param>
			<description>
			         不需要进行拦截的 URL 的正则表达式，逗号分割来进行多个匹配。
			         即：如果当前请求的 URL 的 servletPath 能匹配该正则表达式，则直接放行（即使未登录系统）。
			         该参数值不包含web应用的 ContextPath。
		    </description>
			<param-name>excepUrlRegex</param-name>
			<param-value>/ajax/(login|logout).action,/servlet/imageRandServlet</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>SessionFilter</filter-name>
<!-- 		<url-pattern>*.html</url-pattern> -->
		<url-pattern>/index.html</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>SessionFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>

	<!-- =======================================================================  -->
	<!-- 用户登录SESSION相关 END -->

	<!-- SPRING 上下文 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:spring/spring-datasource.xml		
			classpath:spring/spring-framework.xml
			classpath:spring/spring-persistence.xml		
			classpath:spring/spring-ejx4component.xml	
				
			classpath:spring/spring-ejx4web.xml	
			classpath:spring/spring-tut.xml	
		</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Struts 接入 -->	
	<filter>
		<filter-name>struts</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>struts</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	
	<welcome-file-list>
		<welcome-file>login.html</welcome-file>
	</welcome-file-list>
	
		<!-- Httpservlet 接入 -->
	<servlet>
		<servlet-name>internalService</servlet-name>
		<servlet-class>com.tienon.framework.io.servlet.InternalServiceAdapter</servlet-class>
		<init-param>
			<param-name>adapterId</param-name>
			<param-value>internalService</param-value>
		</init-param>
		<init-param>
			<param-name>requestHandlerBeanId</param-name>
			<param-value>requestHandler</param-value>
		</init-param>
		<init-param>
			<param-name>maxMessageLength</param-name>
			<param-value>81920</param-value>
		</init-param>
		<init-param>
			<param-name>bufferSize</param-name>
			<param-value>1024</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>internalService</servlet-name>
		<url-pattern>/internalService/*</url-pattern>
	</servlet-mapping>
	
	
</web-app>
